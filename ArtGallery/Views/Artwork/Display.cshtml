@model ArtGallery.Models.Tranh
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims
@inject UserManager<NguoiDung> _userManager
@inject ArtGalleryContext _context
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    // Lấy người dùng hiện tại
    var currentUser = await _userManager.GetUserAsync(User);
    var currentUserId = currentUser?.Id;
    
    // Kiểm tra quyền sở hữu
    var isOwner = currentUserId != null && Model.MaNguoiDung == currentUserId;
    
    // Kiểm tra quyền admin 
    var isAdmin = User.IsInRole("Admin");
    
    // Có thể sửa/xóa nếu là admin hoặc chủ sở hữu
    var canEditOrDelete = isOwner || isAdmin;

    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="~/css/display.css?v=4">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">



<div class="container art-detail mt-5 pt-5">
    <div class="row g-0">
        <!-- Art Image -->
        <div class="col-lg-8">
            <div class="art-image">
                <img src="@Model.DuongDanAnh" alt="@Model.TieuDe">
                @if (User.IsInRole("Admin") || Model.MaNguoiDung == _userManager.GetUserId(User))
                {
                    <div class="owner-actions">
                        <a href="@Url.Action("Edit", "Artwork", new { id = Model.MaTranh })" class="edit-btn">
                            <i class="fas fa-edit"></i> Sửa
                        </a>
                        <button type="button" class="delete-btn" onclick="confirmDelete(@Model.MaTranh)">
                            <i class="fas fa-trash"></i> Xóa
                        </button>
                    </div>
                }
            </div>
            <!-- Category and Tags -->
            <div class="category-tags">
                <div class="category mb-3">
                    <span class="category-label">Thể loại:</span>
                    @foreach (var category in Model.MaTheLoais)
                    {
                        <a href="@Url.Action("Display", "TheLoais", new { id = category.MaTheLoai })" class="category-name me-2">
                            @category.TenTheLoai
                        </a>
                    }
                </div>
                <div class="tags d-flex align-items-center">
                    <span class="tags-label">Tags:</span>
                    <div class="tags-container">
                        @foreach (var tag in Model.MaTags)
                        {
                            <a href="@Url.Action("Index", "Search", new { tag = tag.TenTag, sortBy = "newest" })" class="tag-link">
                                #@tag.TenTag
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Art Info -->
        <div class="col-lg-4">
            <div class="art-info">
                <!-- Artist Info -->
                <div class="artist-profile d-flex align-items-center mb-4">
                    <a href="@Url.Action("Profile", "User", new { id = Model.MaNguoiDung })" class="artist-avatar-link">
                        <img src="@Model.MaNguoiDungNavigation.GetAvatarPath()" alt="Artist" class="artist-avatar">
                    </a>
                    <div class="artist-details ms-3">
                        <a href="@Url.Action("Profile", "User", new { id = Model.MaNguoiDung })" class="artist-name-link">
                            <h5 class="artist-name mb-0">@Model.MaNguoiDungNavigation.TenNguoiDung</h5>
                        </a>
                        @if (User.Identity.IsAuthenticated && currentUserId != Model.MaNguoiDung)
                        {
                            var isFollowing = await _context.TheoDois.AnyAsync(t => t.MaNguoiTheoDoi == currentUserId && t.MaNguoiDuocTheoDoi == Model.MaNguoiDung);
                            <button class="follow-btn @(isFollowing ? "following" : "")" 
                                    onclick="toggleFollow(event, '@Model.MaNguoiDung')">
                                <span class="follow-text">Theo dõi</span>
                                <span class="following-text">Đang theo dõi</span>
                            </button>
                        }
                    </div>
                </div>

                <!-- Art Details -->
                <h2 class="art-title mb-3">@Model.TieuDe</h2>

                <!-- Thêm phần mô tả sản phẩm -->
                @if (!string.IsNullOrEmpty(Model.MoTa))
                {
                    <div class="art-description mb-4">
                        @Model.MoTa
                    </div>
                }

                <div class="art-price mb-4">
                    <span class="price-label">Giá:</span>
                    <span class="price-amount">@Model.Gia.ToString("N0") VND</span>
                </div>

                <!-- Action Buttons -->
                <div class="action-buttons">
                    @if (!isOwner)
                    {
                        <a asp-controller="Order" asp-action="Display" asp-route-id="@Model.MaTranh" class="btn btn-outline-primary btn-lg w-100 mb-3">
                            <i class="fas fa-shopping-cart me-2"></i>Đặt hàng ngay
                        </a>
                    }
                    else
                    {
                        <div class="alert alert-info mb-3 text-center">
                            <i class="fas fa-info-circle me-2"></i>Đây là tác phẩm của bạn
                        </div>
                    }
                    
                    @{
                        var isLiked = await _context.LuotThiches.AnyAsync(lt => lt.MaTranh == Model.MaTranh && lt.MaNguoiDung == currentUserId);
                    }
                    <button class="btn btn-outline-primary btn-lg w-100 @(isLiked ? "active" : "")" 
                            onclick="toggleLike(this, @Model.MaTranh)">
                        <i class="@(isLiked ? "fas" : "far") fa-heart me-2"></i>Yêu thích
                    </button>
                </div>

                @if (ViewBag.OtherWorks != null && ViewBag.OtherWorks.Count > 0)
                {
                    <div class="other-works mt-5">
                        <h5 class="section-title">Các tác phẩm khác của @Model.MaNguoiDungNavigation.TenNguoiDung</h5>
                        <div class="row g-3">
                            @foreach (var work in ViewBag.OtherWorks)
                            {
                                <div class="col-4">
                                    <a asp-controller="Artwork" asp-action="Display" asp-route-id="@work.MaTranh" class="other-work-item">
                                        <img src="@work.DuongDanAnh" alt="@work.TieuDe" class="img-fluid rounded">
                                        <div class="work-info">
                                            <p class="work-name">@work.TieuDe</p>
                                        </div>
                                    </a>
                                </div>
                            }
                        </div>
                        <a href="@Url.Action("Gallery", "User", new { id = Model.MaNguoiDung })" 
                           class="view-all-link mt-3 d-block text-center">
                            Xem tất cả tác phẩm của @Model.MaNguoiDungNavigation.TenNguoiDung
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Thêm phần bình luận và đánh giá sau phần thông tin về tranh -->
<div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <div class="comments-section">
                <h3 class="section-title mb-4">Đánh giá & Bình luận</h3>
                
                <!-- Form đánh giá và bình luận -->
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="comment-form-container mb-4">
                        <form id="commentForm" asp-action="AddComment" asp-controller="Artwork" method="post" enctype="multipart/form-data">
                            <input type="hidden" name="MaTranh" value="@Model.MaTranh" />
                            
                            <div class="rating-selection mb-3">
                                <label class="form-label">Đánh giá của bạn:</label>
                                <div class="rating-stars">
                                    <i class="far fa-star" data-rating="1"></i>
                                    <i class="far fa-star" data-rating="2"></i>
                                    <i class="far fa-star" data-rating="3"></i>
                                    <i class="far fa-star" data-rating="4"></i>
                                    <i class="far fa-star" data-rating="5"></i>
                                </div>
                                <input type="hidden" name="Rating" id="selectedRating" value="0" />
                            </div>
                            
                            <div class="form-group mb-3">
                                <textarea class="form-control" id="commentContent" name="NoiDung" rows="3" 
                                          placeholder="Nhập bình luận của bạn về tác phẩm này"></textarea>
                            </div>
                            
                            <div class="comment-attachments mt-2 mb-3">
                                <div class="attachment-buttons">
                                    <label for="imageInput" class="btn-attachment">
                                        <i class="fas fa-image"></i> Ảnh
                                    </label>
                                    <button type="button" class="btn btn-primary" id="openStickerSelector" data-bs-toggle="modal" data-bs-target="#stickerModal">
                                        <i class="fas fa-smile"></i> Sticker
                                    </button>
                                </div>
                                <div id="imagePreviewContainer" class="d-none mt-2">
                                    <img id="imagePreview" class="img-fluid rounded" style="max-height: 100px;" />
                                    <button type="button" class="btn-remove-attachment" id="removeImage">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <div id="stickerPreviewContainer" class="d-none mt-2">
                                    <img id="stickerPreview" class="img-fluid" style="max-height: 80px;" />
                                    <button type="button" class="btn-remove-attachment" id="removeSticker">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <input type="hidden" name="Sticker" id="stickerInput" />
                                <input type="file" id="imageInput" name="CommentImage" class="d-none" accept="image/*" />
                            </div>
                            
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-paper-plane me-2"></i>Gửi bình luận
                            </button>
                        </form>
                    </div>
                }
                else
                {
                    <div class="alert alert-info mb-4">
                        <i class="fas fa-info-circle me-2"></i>
                        Vui lòng <a href="@Url.Action("Login", "Account")" class="alert-link">đăng nhập</a> để đánh giá và bình luận
                    </div>
                }
                
                <!-- Danh sách bình luận -->
                <div class="comments-list">
                    <h4 class="mb-3">Tất cả bình luận (@ViewBag.Comments?.Count)</h4>
                    
                    @if (ViewBag.Comments != null && ViewBag.Comments.Count > 0)
                    {
                        @foreach (var comment in ViewBag.Comments)
                        {
                            <div class="comment-item">
                                <div class="comment-header">
                                    <div class="d-flex align-items-center">
                                        <img src="@comment.MaNguoiDungNavigation.GetAvatarPath()" alt="@comment.MaNguoiDungNavigation.TenNguoiDung" class="commenter-avatar" />
                                        <div class="commenter-info">
                                            <h5 class="commenter-name">@comment.MaNguoiDungNavigation.TenNguoiDung</h5>
                                            <div class="comment-date">@comment.NgayBinhLuan?.ToString("dd/MM/yyyy HH:mm")</div>
                                        </div>
                                    </div>
                                    <div class="comment-rating">
                                        @if (comment.Rating > 0)
                                        {
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="@(i <= comment.Rating ? "fas fa-star" : "far fa-star")"></i>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="comment-content">
                                    @comment.NoiDung
                                    @if (!string.IsNullOrEmpty(comment.Sticker))
                                    {
                                        <div class="sticker-container">
                                            <img src="@Url.Content(comment.Sticker)" alt="Sticker" class="comment-sticker" />
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(comment.DuongDanAnh))
                                    {
                                        <div class="comment-image-container mt-2">
                                            <img src="@Url.Content(comment.DuongDanAnh)" alt="Uploaded image" class="comment-image zoomable-image" 
                                                 onclick="openImageModal('@Url.Content(comment.DuongDanAnh)')" />
                                        </div>
                                    }
                                </div>
                                <div class="comment-actions mt-2">
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <button class="btn-reply" onclick="toggleReplyForm(@comment.MaBinhLuan)">
                                            <i class="fas fa-reply me-1"></i>Phản hồi
                                        </button>
                                    }
                                </div>
                                
                                <!-- Form phản hồi (ẩn ban đầu) -->
                                <div class="reply-form-container mt-2" id="replyForm-@comment.MaBinhLuan" style="display:none;">
                                    <form class="reply-form" asp-action="AddReply" asp-controller="Artwork" method="post" enctype="multipart/form-data">
                                        <input type="hidden" name="MaBinhLuan" value="@comment.MaBinhLuan" />
                                        <input type="hidden" name="MaTranh" value="@Model.MaTranh" />
                                        <div class="d-flex">
                                            <div class="reply-avatar">
                                                <img src="@currentUser?.GetAvatarPath()" alt="Avatar" class="reply-user-avatar" />
                                            </div>
                                            <div class="reply-input-container">
                                                <textarea class="form-control reply-input" name="NoiDung" placeholder="Viết phản hồi..." rows="1"></textarea>
                                                <div class="reply-attachment-options mt-1">
                                                    <button type="button" class="btn-reply-attachment" onclick="openReplyImageSelector(@comment.MaBinhLuan)">
                                                        <i class="fas fa-image"></i>
                                                    </button>
                                                    <button type="button" class="btn-reply-attachment" onclick="openReplyStickerSelector(@comment.MaBinhLuan)">
                                                        <i class="fas fa-smile"></i>
                                                    </button>
                                                    <div id="replyImagePreview-@comment.MaBinhLuan" class="reply-preview d-none">
                                                        <img class="img-fluid rounded preview-img" />
                                                        <button type="button" class="btn-remove-preview" onclick="removeReplyImage(@comment.MaBinhLuan)">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    </div>
                                                    <div id="replyStickerPreview-@comment.MaBinhLuan" class="reply-preview d-none">
                                                        <img class="img-fluid preview-sticker" />
                                                        <button type="button" class="btn-remove-preview" onclick="removeReplySticker(@comment.MaBinhLuan)">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                                <input type="hidden" name="Sticker" class="stickerInputReply" id="stickerInputReply-@comment.MaBinhLuan" />
                                                <input type="file" class="d-none imageInputReply" id="imageInputReply-@comment.MaBinhLuan" name="ReplyImage" accept="image/*" />
                                                <div class="reply-actions mt-2">
                                                    <button type="button" class="btn-cancel-reply" onclick="hideReplyForm(@comment.MaBinhLuan)">Hủy</button>
                                                    <button type="submit" class="btn-submit-reply">Gửi</button>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                
                                <!-- Hiển thị phản hồi cho bình luận -->
                                @if (ViewBag.Replies != null && ViewBag.Replies.ContainsKey(comment.MaBinhLuan))
                                {
                                    <div class="replies-container mt-2">
                                        @foreach (var reply in ViewBag.Replies[comment.MaBinhLuan])
                                        {
                                            <div class="reply-item">
                                                <div class="d-flex align-items-start">
                                                    <img src="@reply.MaNguoiDungNavigation.GetAvatarPath()" alt="@reply.MaNguoiDungNavigation.TenNguoiDung" class="reply-avatar" />
                                                    <div class="reply-content">
                                                        <div class="reply-bubble">
                                                            <h6 class="reply-username">@reply.MaNguoiDungNavigation.TenNguoiDung</h6>
                                                            <p class="reply-text mb-0">@reply.NoiDung</p>
                                                            @if (!string.IsNullOrEmpty(reply.Sticker))
                                                            {
                                                                <div class="sticker-container">
                                                                    <img src="@Url.Content(reply.Sticker)" alt="Sticker" class="reply-sticker" />
                                                                </div>
                                                            }
                                                            @if (!string.IsNullOrEmpty(reply.DuongDanAnh))
                                                            {
                                                                <div class="reply-image-container mt-1">
                                                                    <img src="@Url.Content(reply.DuongDanAnh)" alt="Uploaded image" class="reply-image zoomable-image" 
                                                                         onclick="openImageModal('@Url.Content(reply.DuongDanAnh)')" />
                                                                </div>
                                                            }
                                                        </div>
                                                        <div class="reply-meta">
                                                            <span class="reply-time">@reply.NgayPhanHoi?.ToString("dd/MM/yyyy HH:mm")</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-comments text-center py-4">
                            <i class="far fa-comment-dots fa-3x mb-3"></i>
                            <p>Chưa có bình luận nào cho tác phẩm này</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (canEditOrDelete)
{
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Xác nhận xóa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa tác phẩm này không?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    @Html.AntiForgeryToken()
                    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                    <script>
                        function confirmDelete(artworkId) {
                            if (confirm('Bạn có chắc chắn muốn xóa tranh này không?')) {
                                $.ajax({
                                    url: '/Artwork/Delete/' + artworkId,
                                    type: 'POST',
                                    headers: {
                                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                                    },
                                    success: function (response) {
                                        if (response.success) {
                                            alert(response.message);
                                            window.location.href = response.redirectUrl;
                                        } else {
                                            alert(response.message);
                                        }
                                    },
                                    error: function () {
                                        alert('Có lỗi xảy ra khi xóa tranh');
                                    }
                                });
                            }
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
}

<!-- Thêm modal lightbox vào cuối file, trước section Scripts -->
<div id="artworkModal" class="modal">
    <div class="modal-content artwork-modal">
        <span class="close" onclick="closeArtworkModal()">&times;</span>
        <img class="artwork-modal-content" id="modalImage">
    </div>
</div>

<!-- Thêm modal cho ảnh bình luận (có thể sử dụng lại modal hiện có) -->
<div id="commentImageModal" class="modal">
    <div class="modal-content artwork-modal">
        <span class="close" onclick="closeImageModal()">&times;</span>
        <img class="artwork-modal-content" id="modalCommentImage">
    </div>
</div>

<!-- Kiểm tra modal sticker có đúng cấu trúc -->
<div class="modal fade" id="stickerModal" tabindex="-1" aria-labelledby="stickerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="stickerModalLabel">Chọn sticker</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <ul class="nav nav-tabs" id="stickerTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="vanthuong-tab" data-bs-toggle="tab" data-bs-target="#vanthuong" type="button" role="tab">Vân Thường</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="daisuhuynh-tab" data-bs-toggle="tab" data-bs-target="#daisuhuynh" type="button" role="tab">Đại Sư Huynh</button>
                    </li>
                </ul>
                <div class="tab-content p-2" id="stickerTabContent">
                    <div class="tab-pane fade show active" id="vanthuong" role="tabpanel">
                        <div class="sticker-grid" id="vanthuong-stickers">
                            <!-- Stickers sẽ được load bằng JavaScript -->
                        </div>
                    </div>
                    <div class="tab-pane fade" id="daisuhuynh" role="tabpanel">
                        <div class="sticker-grid" id="daisuhuynh-stickers">
                            <!-- Stickers sẽ được load bằng JavaScript -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

@section Scripts {
    <!-- Đảm bảo đã include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        function toggleLike(button, artworkId) {
            $.ajax({
                url: '/Artwork/ToggleLike',
                type: 'POST',
                data: { artworkId: artworkId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        const icon = button.querySelector('i');
                        if (response.liked) {
                            // Đã thích
                            icon.classList.remove('far');
                            icon.classList.add('fas');
                            button.classList.add('active');
                        } else {
                            // Đã hủy thích
                            icon.classList.remove('fas');
                            icon.classList.add('far');
                            button.classList.remove('active');
                        }
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert('Có lỗi xảy ra khi thực hiện thao tác');
                }
            });
        }
        
        function toggleFollow(event, userId) {
            event.preventDefault();
            var button = event.currentTarget;
            
            $.ajax({
                url: '/User/ToggleFollow',
                type: 'POST',
                data: { followedUserId: userId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        if (response.isFollowing) {
                            button.classList.add('following');
                        } else {
                            button.classList.remove('following');
                        }
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert('Có lỗi xảy ra khi thực hiện thao tác theo dõi');
                }
            });
        }

        // Thêm code mới cho lightbox
        function openArtworkModal() {
            const modal = document.getElementById('artworkModal');
            if (modal) {
                modal.style.display = 'block';
                document.body.classList.add('modal-open');
            } else {
                console.error('Modal element not found');
            }
        }

        function closeArtworkModal() {
            document.getElementById('artworkModal').style.display = 'none';
            document.body.classList.remove('modal-open');
        }

        // Khi trang đã tải xong
        document.addEventListener('DOMContentLoaded', function() {
            // Thêm sự kiện click cho ảnh
            const artworkImage = document.querySelector('.art-image img');
            if (artworkImage) {
                artworkImage.addEventListener('click', function() {
                    // Thiết lập src cho ảnh trong modal
                    document.getElementById('modalImage').src = this.src;
                    // Mở modal
                    openArtworkModal();
                });
            }

            // Đóng modal khi click bên ngoài ảnh
            const modal = document.getElementById('artworkModal');
            if (modal) {
                modal.addEventListener('click', function(event) {
                    if (event.target === modal) {
                        closeArtworkModal();
                    }
                });
            }
        });

        // Thêm code xử lý rating stars
        $(document).ready(function() {
            // Xử lý rating stars
            $('.rating-stars i').on('click', function() {
                const rating = $(this).data('rating');
                $('#selectedRating').val(rating);
                
                // Reset tất cả các sao về trạng thái chưa chọn
                $('.rating-stars i').removeClass('fas').addClass('far');
                
                // Thêm class active cho các sao được chọn
                $('.rating-stars i').each(function() {
                    if ($(this).data('rating') <= rating) {
                        $(this).removeClass('far').addClass('fas');
                    }
                });
            });
            
            // Hiệu ứng hover
            $('.rating-stars i').on('mouseenter', function() {
                const hoverRating = $(this).data('rating');
                
                // Tô màu các sao khi hover
                $('.rating-stars i').each(function() {
                    if ($(this).data('rating') <= hoverRating) {
                        $(this).addClass('hover');
                    } else {
                        $(this).removeClass('hover');
                    }
                });
            }).on('mouseleave', function() {
                // Xóa hover khi di chuột ra khỏi
                $('.rating-stars i').removeClass('hover');
            });
        });

                function toggleReplyForm(commentId) {
            const replyForm = document.getElementById(`replyForm-${commentId}`);
            if (replyForm) {
                replyForm.style.display = 'block';
                // Focus vào ô input
                setTimeout(() => {
                    const textarea = replyForm.querySelector('textarea');
                    if (textarea) textarea.focus();
                }, 100);
            }
        }

        function hideReplyForm(commentId) {
            const replyForm = document.getElementById(`replyForm-${commentId}`);
            if (replyForm) {
                replyForm.style.display = 'none';
                // Clear nội dung
                const textarea = replyForm.querySelector('textarea');
                if (textarea) textarea.value = '';
            }
        }

        // Gọi trực tiếp hàm load stickers khi trang tải xong
        loadStickers();
        
        // Xử lý nút sticker
        $('#openStickerSelector').click(function() {
            console.log('Sticker button clicked');
            // Kiểm tra modal đã được tạo chưa
            if ($('#stickerModal').length) {
                $('#stickerModal').modal('show');
            } else {
                console.error('Sticker modal not found');
            }
        });
        
        // Hàm load stickers từ server
        function loadStickers() {
            console.log('Loading stickers...');
            // Cập nhật tên thư mục trong biến path (nếu cần)
            const vanthuongPath = '/images/stickers/vanthuong/';
            const daisuhuynhPath = '/images/stickers/daisuhuynh/';
            
            // Tạo 12 stickers mẫu cho mỗi thư mục
            let vanthuongHtml = '';
            for (let i = 1; i <= 12; i++) {
                vanthuongHtml += `<div class="sticker-item">
                    <img src="${vanthuongPath}sticker${i}.png" data-path="${vanthuongPath}sticker${i}.png" 
                         class="sticker-img" onclick="selectSticker(this)">
                </div>`;
            }
            $('#vanthuong-stickers').html(vanthuongHtml);
            
            let daisuhuynhHtml = '';
            for (let i = 1; i <= 12; i++) {
                daisuhuynhHtml += `<div class="sticker-item">
                    <img src="${daisuhuynhPath}sticker${i}.png" data-path="${daisuhuynhPath}sticker${i}.png" 
                         class="sticker-img" onclick="selectSticker(this)">
                </div>`;
            }
            $('#daisuhuynh-stickers').html(daisuhuynhHtml);
            
            // Gọi API nếu hard-coded không hoạt động
            $.ajax({
                url: '/Artwork/GetStickers',
                type: 'GET',
                success: function(data) {
                    console.log('Stickers loaded:', data);
                    if (data.vanthuong && data.vanthuong.length > 0) {
                        let vanthuongHtml = '';
                        data.vanthuong.forEach(function(sticker) {
                            vanthuongHtml += `<div class="sticker-item">
                                <img src="${sticker}" data-path="${sticker}" class="sticker-img" onclick="selectSticker(this)">
                            </div>`;
                        });
                        $('#vanthuong-stickers').html(vanthuongHtml);
                    }
                    
                    if (data.daisuhuynh && data.daisuhuynh.length > 0) {
                        let daisuhuynhHtml = '';
                        data.daisuhuynh.forEach(function(sticker) {
                            daisuhuynhHtml += `<div class="sticker-item">
                                <img src="${sticker}" data-path="${sticker}" class="sticker-img" onclick="selectSticker(this)">
                            </div>`;
                        });
                        $('#daisuhuynh-stickers').html(daisuhuynhHtml);
                    }
                },
                error: function(err) {
                    console.error('Error loading stickers:', err);
                }
            });
        }
        
        // Hàm chọn sticker (đặt ở global scope để có thể gọi từ onclick)
        function selectSticker(element) {
            console.log('Sticker selected:', $(element).data('path'));
            const stickerPath = $(element).data('path');
            $('#stickerInput').val(stickerPath);
            $('#stickerPreview').attr('src', stickerPath);
            $('#stickerPreviewContainer').removeClass('d-none');
            $('#imagePreviewContainer').addClass('d-none');
            $('#imageInput').val('');
            $('#stickerModal').modal('hide');
        }

        // Thêm JavaScript để xử lý việc zoom ảnh bình luận
        function openImageModal(imageSrc) {
            const modal = document.getElementById('commentImageModal');
            const modalImg = document.getElementById('modalCommentImage');
            
            modalImg.src = imageSrc;
            modal.style.display = 'block';
            document.body.classList.add('modal-open');
        }
        
        function closeImageModal() {
            document.getElementById('commentImageModal').style.display = 'none';
            document.body.classList.remove('modal-open');
        }

        // Đóng modal khi click bên ngoài ảnh
        $(document).ready(function() {
            $('#commentImageModal').on('click', function(event) {
                if (event.target === this) {
                    closeImageModal();
                }
            });
            
            // Sử dụng phím Esc để đóng modal
            $(document).keydown(function(event) {
                if (event.keyCode === 27) { // Phím Esc
                    closeImageModal();
                }
            });
        });
    </script>
}

<input type="hidden" name="__RequestVerificationToken" value="@token" />
