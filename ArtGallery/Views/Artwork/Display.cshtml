@model ArtGallery.Models.Tranh
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims
@inject UserManager<NguoiDung> _userManager
@inject ArtGalleryContext _context
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    // Lấy người dùng hiện tại
    var currentUser = await _userManager.GetUserAsync(User);
    var currentUserId = currentUser?.Id;
    
    // Kiểm tra quyền sở hữu
    var isOwner = currentUserId != null && Model.MaNguoiDung == currentUserId;
    
    // Kiểm tra quyền admin 
    var isAdmin = User.IsInRole("Admin");
    
    // Có thể sửa/xóa nếu là admin hoặc chủ sở hữu
    var canEditOrDelete = isOwner || isAdmin;

    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="~/css/display.css?v=3">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">



<div class="container art-detail mt-5 pt-5">
    <div class="row g-0">
        <!-- Art Image -->
        <div class="col-lg-8">
            <div class="art-image">
                <img src="@Model.DuongDanAnh" alt="@Model.TieuDe">
                @if (User.IsInRole("Admin") || Model.MaNguoiDung == _userManager.GetUserId(User))
                {
                    <div class="owner-actions">
                        <a href="@Url.Action("Edit", "Artwork", new { id = Model.MaTranh })" class="edit-btn">
                            <i class="fas fa-edit"></i> Sửa
                        </a>
                        <button type="button" class="delete-btn" onclick="confirmDelete(@Model.MaTranh)">
                            <i class="fas fa-trash"></i> Xóa
                        </button>
                    </div>
                }
            </div>
            <!-- Category and Tags -->
            <div class="category-tags">
                <div class="category mb-3">
                    <span class="category-label">Thể loại:</span>
                    @foreach (var category in Model.MaTheLoais)
                    {
                        <a href="@Url.Action("Display", "TheLoais", new { id = category.MaTheLoai })" class="category-name me-2">
                            @category.TenTheLoai
                        </a>
                    }
                </div>
                <div class="tags d-flex align-items-center">
                    <span class="tags-label">Tags:</span>
                    <div class="tags-container">
                        @foreach (var tag in Model.MaTags)
                        {
                            <a href="@Url.Action("Index", "Search", new { tag = tag.TenTag, sortBy = "newest" })" class="tag-link">
                                #@tag.TenTag
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Art Info -->
        <div class="col-lg-4">
            <div class="art-info">
                <!-- Artist Info -->
                <div class="artist-profile d-flex align-items-center mb-4">
                    <a href="@Url.Action("Profile", "User", new { id = Model.MaNguoiDung })" class="artist-avatar-link">
                        <img src="@Model.MaNguoiDungNavigation.GetAvatarPath()" alt="Artist" class="artist-avatar">
                    </a>
                    <div class="artist-details ms-3">
                        <a href="@Url.Action("Profile", "User", new { id = Model.MaNguoiDung })" class="artist-name-link">
                            <h5 class="artist-name mb-0">@Model.MaNguoiDungNavigation.TenNguoiDung</h5>
                        </a>
                        @if (User.Identity.IsAuthenticated && currentUserId != Model.MaNguoiDung)
                        {
                            var isFollowing = await _context.TheoDois.AnyAsync(t => t.MaNguoiTheoDoi == currentUserId && t.MaNguoiDuocTheoDoi == Model.MaNguoiDung);
                            <button class="follow-btn @(isFollowing ? "following" : "")" 
                                    onclick="toggleFollow(event, '@Model.MaNguoiDung')">
                                <span class="follow-text">Theo dõi</span>
                                <span class="following-text">Đang theo dõi</span>
                            </button>
                        }
                    </div>
                </div>

                <!-- Art Details -->
                <h2 class="art-title mb-3">@Model.TieuDe</h2>

                <!-- Thêm phần mô tả sản phẩm -->
                @if (!string.IsNullOrEmpty(Model.MoTa))
                {
                    <div class="art-description mb-4">
                        @Model.MoTa
                    </div>
                }

                <div class="art-price mb-4">
                    <span class="price-label">Giá:</span>
                    <span class="price-amount">@Model.Gia.ToString("N0") VND</span>
                </div>

                <!-- Action Buttons -->
                <div class="action-buttons">
                    <a asp-controller="Order" asp-action="Display" asp-route-id="@Model.MaTranh" class="btn btn-outline-primary btn-lg w-100 mb-3">
                        <i class="fas fa-shopping-cart me-2"></i>Đặt hàng ngay
                    </a>
                    
                    @{
                        var isLiked = await _context.LuotThiches.AnyAsync(lt => lt.MaTranh == Model.MaTranh && lt.MaNguoiDung == currentUserId);
                    }
                    <button class="btn btn-outline-primary btn-lg w-100 @(isLiked ? "active" : "")" 
                            onclick="toggleLike(this, @Model.MaTranh)">
                        <i class="@(isLiked ? "fas" : "far") fa-heart me-2"></i>Yêu thích
                    </button>
                </div>

                @if (ViewBag.OtherWorks != null && ViewBag.OtherWorks.Count > 0)
                {
                    <div class="other-works mt-5">
                        <h5 class="section-title">Các tác phẩm khác của @Model.MaNguoiDungNavigation.TenNguoiDung</h5>
                        <div class="row g-3">
                            @foreach (var work in ViewBag.OtherWorks)
                            {
                                <div class="col-4">
                                    <a asp-controller="Artwork" asp-action="Display" asp-route-id="@work.MaTranh" class="other-work-item">
                                        <img src="@work.DuongDanAnh" alt="@work.TieuDe" class="img-fluid rounded">
                                        <div class="work-info">
                                            <p class="work-name">@work.TieuDe</p>
                                        </div>
                                    </a>
                                </div>
                            }
                        </div>
                        <a href="@Url.Action("Gallery", "User", new { id = Model.MaNguoiDung })" 
                           class="view-all-link mt-3 d-block text-center">
                            Xem tất cả tác phẩm của @Model.MaNguoiDungNavigation.TenNguoiDung
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (canEditOrDelete)
{
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Xác nhận xóa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa tác phẩm này không?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    @Html.AntiForgeryToken()
                    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                    <script>
                        function confirmDelete(artworkId) {
                            if (confirm('Bạn có chắc chắn muốn xóa tranh này không?')) {
                                $.ajax({
                                    url: '/Artwork/Delete/' + artworkId,
                                    type: 'POST',
                                    headers: {
                                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                                    },
                                    success: function (response) {
                                        if (response.success) {
                                            alert(response.message);
                                            window.location.href = response.redirectUrl;
                                        } else {
                                            alert(response.message);
                                        }
                                    },
                                    error: function () {
                                        alert('Có lỗi xảy ra khi xóa tranh');
                                    }
                                });
                            }
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
}

<!-- Thêm modal lightbox vào cuối file, trước section Scripts -->
<div id="artworkModal" class="modal">
    <div class="modal-content artwork-modal">
        <span class="close" onclick="closeArtworkModal()">&times;</span>
        <img class="artwork-modal-content" id="modalImage">
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function toggleLike(button, artworkId) {
            $.ajax({
                url: '/Artwork/ToggleLike',
                type: 'POST',
                data: { artworkId: artworkId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        const icon = button.querySelector('i');
                        if (response.liked) {
                            // Đã thích
                            icon.classList.remove('far');
                            icon.classList.add('fas');
                            button.classList.add('active');
                        } else {
                            // Đã hủy thích
                            icon.classList.remove('fas');
                            icon.classList.add('far');
                            button.classList.remove('active');
                        }
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert('Có lỗi xảy ra khi thực hiện thao tác');
                }
            });
        }
        
        function toggleFollow(event, userId) {
            event.preventDefault();
            var button = event.currentTarget;
            
            $.ajax({
                url: '/User/ToggleFollow',
                type: 'POST',
                data: { followedUserId: userId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        if (response.isFollowing) {
                            button.classList.add('following');
                        } else {
                            button.classList.remove('following');
                        }
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert('Có lỗi xảy ra khi thực hiện thao tác theo dõi');
                }
            });
        }

        // Thêm code mới cho lightbox
        function openArtworkModal() {
            const modal = document.getElementById('artworkModal');
            if (modal) {
                modal.style.display = 'block';
                document.body.classList.add('modal-open');
            } else {
                console.error('Modal element not found');
            }
        }

        function closeArtworkModal() {
            document.getElementById('artworkModal').style.display = 'none';
            document.body.classList.remove('modal-open');
        }

        // Khi trang đã tải xong
        document.addEventListener('DOMContentLoaded', function() {
            // Thêm sự kiện click cho ảnh
            const artworkImage = document.querySelector('.art-image img');
            if (artworkImage) {
                artworkImage.addEventListener('click', function() {
                    // Thiết lập src cho ảnh trong modal
                    document.getElementById('modalImage').src = this.src;
                    // Mở modal
                    openArtworkModal();
                });
            }

            // Đóng modal khi click bên ngoài ảnh
            const modal = document.getElementById('artworkModal');
            if (modal) {
                modal.addEventListener('click', function(event) {
                    if (event.target === modal) {
                        closeArtworkModal();
                    }
                });
            }
        });
    </script>
}

<input type="hidden" name="__RequestVerificationToken" value="@token" />
