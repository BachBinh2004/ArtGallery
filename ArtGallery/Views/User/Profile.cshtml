@model ArtGallery.Models.NguoiDung
@using System.Text.Json
@{
    ViewData["Title"] = Model.TenNguoiDung;
    var mediaJson = Json.Serialize(Model.Media.Select(m => new { loaiMedia = m.LoaiMedia, duongDan = m.DuongDan }));
    var currentUserId = ViewBag.CurrentUserId;
}

<meta name="user-id" content="@Model.Id" />
@Html.AntiForgeryToken()

<link rel="stylesheet" href="~/css/profile.css?v=3">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<div class="profile-container">
    <!-- Profile Header -->
    <div class="profile-header">
        <!-- Cover Image Section -->
        <div class="profile-cover-photo">
            @if (!string.IsNullOrEmpty(Model.CoverImage))
            {
                <img src="/images/authors/coverimages/@Model.UserName/@Model.CoverImage" alt="Cover Image">
            }
            <div class="gradient-overlay"></div>
        </div>

        <div class="profile-actions">
            @if (ViewBag.IsOwnProfile)
            {
                <a href="#" class="edit-profile-btn" onclick="openEditProfileModal()">
                    <i class="fas fa-edit"></i> Chỉnh sửa hồ sơ
                </a>
                <div class="profile-settings-dropdown">
                    <button class="profile-settings-btn">
                        <i class="fas fa-ellipsis-h"></i>
                    </button>
                    <div class="profile-dropdown-menu">
                        <a href="#" class="profile-dropdown-item">
                            <i class="fas fa-share-alt"></i> Chia sẻ hồ sơ
                        </a>
                        <a href="#" class="profile-dropdown-item">
                            <i class="fas fa-cog"></i> Cài đặt tài khoản
                        </a>
                    </div>
                </div>
            }
            else
            {
                @if (User.Identity.IsAuthenticated && Model.Id != ViewBag.CurrentUserId)
                {
                    <button class="follow-button-primary @(ViewBag.IsFollowing ? "following" : "")"
                            onclick="toggleFollow(event, '@Model.Id')">
                        <span class="follow-text">Theo dõi</span>
                        <span class="following-text">Đang theo dõi</span>
                    </button>
                    
                    <a href="/Messages/Index/@Model.Id" class="message-button-primary">
                        <i class="fas fa-envelope"></i> Nhắn tin
                    </a>
                }
            }
        </div>

        <!-- Profile Info Section -->
        <div class="profile-info">
            <div class="profile-avatar">
                <img src="@Model.GetAvatarPath()" alt="@Model.TenNguoiDung">
                <div class="photo-overlay">
                    <button class="change-photo-btn" onclick="openEditProfileModal()">
                        <i class="fas fa-camera"></i>
                    </button>
                </div>
            </div>
            <div class="profile-details">
                <div class="profile-type">Hồ sơ</div>
                <h1 class="profile-name">@Model.TenNguoiDung</h1>
                <div class="profile-stats">
                    <div class="stat">
                        <span class="stat-count">@ViewBag.FollowingCount</span> Đang theo dõi
                    </div>
                    <div class="stat">
                        <span class="stat-count">@ViewBag.FollowersCount</span> Người theo dõi
                    </div>
                </div>


                <!-- Thêm phần social media -->
                @if (Model.Media != null && Model.Media.Any())
                {
                    <div class="social-media-links">
                        @foreach (var media in Model.Media)
                        {
                            <a href="@media.DuongDan" target="_blank" class="social-media-link">
                                @switch (media.LoaiMedia)
                                {
                                    case "X":
                                        <i class="fab fa-x"></i>
                                        break;
                                    case "Instagram":
                                        <i class="fab fa-instagram"></i>
                                        break;
                                    case "Facebook":
                                        <i class="fab fa-facebook"></i>
                                        break;
                                    case "Tiktok":
                                        <i class="fab fa-tiktok"></i>
                                        break;
                                    case "Website":
                                        <i class="fas fa-link"></i>
                                        break;
                                }
                            </a>
                        }
                    </div>
                }
                <a href="#" class="see-all-media" onclick="openViewAllInfoModal(); return false;">
                    <i class="info-circle"></i> Xem tất cả
                </a>
            </div>
        </div>
    </div>

    <!-- Tab Content -->
    <div class="profile-content">
        <div class="tab-content active" id="overview">
            <!-- Featured Section -->
            <div class="section">
                <div class="section-header">
                    <h2>Nổi bật</h2>
                    <a href="#" class="see-all">Xem tất cả</a>
                </div>
                <div class="featured-grid" id="featured-grid">
                    @if (ViewBag.FeaturedArtworks != null)
                    {
                        @foreach (var artwork in ViewBag.FeaturedArtworks)
                        {
                            <div class="featured-item">
                                <a href="@Url.Action("Display", "Artwork", new { id = artwork.MaTranh })">
                                    <img src="@artwork.DuongDanAnh" alt="@artwork.TieuDe">
                                    <div class="featured-item-title">@artwork.TieuDe</div>
                                </a>
                                @if (ViewBag.IsOwnProfile)
                                {
                                    <button class="remove-featured" onclick="removeFeatured(@artwork.MaTranh)">
                                        <i class="fas fa-times"></i>
                                    </button>
                                }
                            </div>
                        }
                    }
                    
                    <div class="add-featured" onclick="showFeaturedArtworksModal()">
                        <i class="fas fa-plus"></i>
                        <span>Thêm</span>
                    </div>
                </div>
            </div>

            <!-- Gallery Section -->
            <div class="section">
                <div class="section-header">
                    @if (ViewBag.IsOwnProfile)
                    {
                        <h2>Ảnh của bạn</h2>
                    }
                    else
                    {
                        <h2>Ảnh của @Model.TenNguoiDung</h2>
                    }
                    <a href="@Url.Action("Gallery", "User", new { id = Model.Id })" class="see-all">Xem tất cả</a>
                </div>
                <div class="gallery-grid">
                    @foreach (var artwork in Model.Tranhs.Take(8))
                    {
                        <div class="gallery-item">
                            <a href="@Url.Action("Display", "Artwork", new { id = artwork.MaTranh })">
                                <img src="@artwork.DuongDanAnh" alt="@artwork.TieuDe">
                                <div class="gallery-item-title">@artwork.TieuDe</div>
                            </a>
                        </div>
                    }
                </div>
                @if (Model.Tranhs.Count() > 8)
                {
                    <div class="see-all-container">
                        <a href="@Url.Action("Gallery", "User", new { id = Model.Id })" class="see-all-btn">
                            <i class="fas fa-th-large"></i> Xem tất cả @Model.Tranhs.Count() tác phẩm
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div id="editProfileModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Chỉnh sửa hồ sơ</h3>
            <span class="close" onclick="closeEditProfileModal()">&times;</span>
        </div>
        <form id="editProfileForm" method="post" action="@Url.Action("UpdateProfile", "User")" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <input type="hidden" name="Id" value="@Model.Id" />
            <input type="hidden" name="TenDangNhap" value="@Model.UserName" />
            <input type="hidden" id="existingMediaData" value='@Html.Raw(mediaJson)' />

            <!-- Cover Image Section -->
            <div class="cover-image-section">
                <input type="file" id="coverImage" name="coverImage" accept="image/*" hidden>
                <div class="cover-preview-container">
                    @if (!string.IsNullOrEmpty(Model.CoverImage))
                    {
                        <img id="coverPreview" src="/images/authors/coverimages/@Model.UserName/@Model.CoverImage" alt="Cover Image">
                    }
                    else
                    {
                        <img id="coverPreview" style="display: none;" alt="Cover Image">
                    }
                </div>
                <div class="cover-placeholder" onclick="document.getElementById('coverImage').click()">
                    <i class="fas fa-edit"></i>
                    <span>Chọn ảnh bìa và tùy chỉnh hồ sơ của bạn!</span>
                </div>
            </div>

            <!-- Profile Image Section -->
            <div class="form-group">
                <label>Ảnh đại diện</label>
                <div class="profile-image-container">
                    <img id="profilePreview" src="@Model.GetAvatarPath()" alt="Ảnh đại diện">
                    <div class="edit-icon" onclick="document.getElementById('profileImage').click()">
                        <i class="fas fa-pencil-alt"></i>
                    </div>
                    <input type="file" id="profileImage" name="profileImage" accept="image/*" hidden>
                </div>
            </div>

            <!-- Nickname Section -->
            <div class="form-group">
                <label for="nickname">Tên hiển thị</label>
                <div class="input-container">
                    <input type="text" id="nickname" name="TenNguoiDung" value="@Model.TenNguoiDung" maxlength="50">
                </div>
            </div>

            <!-- Các phần còn lại của form giữ nguyên -->
            <!-- Self Introduction Section -->
            <div class="form-group">
                <label for="selfIntro">Giới thiệu bản thân</label>
                <textarea id="selfIntro" name="MoTa" rows="3">@Model.MoTa</textarea>
            </div>

            <!-- Social Media Section -->
            <div class="form-group">
                <label>Mạng xã hội</label>
                <div id="socialMediaContainer">
                    @if (Model.Media != null && Model.Media.Any())
                    {
                        @foreach (var media in Model.Media)
                        {
                            <div class="social-media-item">
                                <select name="LoaiMedia[]">
                                    <option value="X" selected="@(media.LoaiMedia == "X")">X</option>
                                    <option value="Facebook" selected="@(media.LoaiMedia == "Facebook")">Facebook</option>
                                    <option value="Instagram" selected="@(media.LoaiMedia == "Instagram")">Instagram</option>
                                    <option value="Tiktok" selected="@(media.LoaiMedia == "Tiktok")">Tiktok</option>
                                    <option value="Website" selected="@(media.LoaiMedia == "Website")">Website</option>
                                </select>
                                <input type="text" name="DuongDan[]" placeholder="ID" value="@media.DuongDan" />
                                <button type="button" class="remove-media">×</button>
                            </div>
                        }
                    }
                </div>
                <button type="button" onclick="addMediaField()" class="add-media">Add media</button>
            </div>

            <!-- Gender Section -->
            <div class="form-group">
                <label>Giới tính</label>
                <div class="gender-row">
                    <div class="radio-options">
                        <label class="radio-option">
                            <input type="radio" name="GioiTinh" value="Nam" @(Model.GioiTinh == "Nam" ? "checked" : "")>
                            <span>Nam</span>
                        </label>
                        <label class="radio-option">
                            <input type="radio" name="GioiTinh" value="Nữ" @(Model.GioiTinh == "Nữ" ? "checked" : "")>
                            <span>Nữ</span>
                        </label>
                        <label class="radio-option">
                            <input type="radio" name="GioiTinh" value="Khác" @(Model.GioiTinh == "Khác" ? "checked" : "")>
                            <span>Khác</span>
                        </label>
                    </div>
                    <div class="privacy-select-wrapper">
                        <select class="privacy-select" name="HienThiGioiTinh">
                            <option value="Public" selected="@(Model.HienThiGioiTinh == "Public")">Công khai</option>
                            <option value="Private" selected="@(Model.HienThiGioiTinh == "Private")">Riêng tư</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Location Section -->
            <div class="form-group">
                <label>Vị trí</label>
                <div class="select-row">
                    <div class="main-select-wrapper">
                        <select class="main-select" name="DiaChi" id="locationSelect">
                            <option value="">--</option>
                        </select>
                        <input type="hidden" id="currentLocation" value="@Model.DiaChi" />
                    </div>
                    <div class="privacy-select-wrapper">
                        <select class="privacy-select" name="HienThiDiaChi">
                            <option value="Public" selected="@(Model.HienThiDiaChi == "Public")">Công khai</option>
                            <option value="Private" selected="@(Model.HienThiDiaChi == "Private")">Riêng tư</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Thêm hidden input để lưu ngày sinh hiện tại -->
            <input type="hidden" id="currentBirthDate" value="@(Model.NgaySinh?.ToString("yyyy-MM-dd"))" />

            <!-- Birth Year Section -->
            <div class="form-group">
                <label>Năm sinh</label>
                <div class="select-row">
                    <div class="main-select-wrapper">
                        <select class="main-select" name="BirthYear">
                            <option value="">--</option>
                        </select>
                    </div>
                    <div class="privacy-select-wrapper">
                        <select class="privacy-select" name="HienThiNamSinh">
                            <option value="Public" selected="@(Model.HienThiNamSinh == "Public")">Công khai</option>
                            <option value="Private" selected="@(Model.HienThiNamSinh == "Private")">Riêng tư</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Birthday Section -->
            <div class="form-group">
                <label>Ngày sinh</label>
                <div class="birthday-row">
                    <div class="month-select-wrapper">
                        <select class="month-select" name="BirthMonth">
                            <option value="">--</option>
                        </select>
                    </div>
                    <div class="day-select-wrapper">
                        <select class="day-select" name="BirthDay">
                            <option value="">--</option>
                        </select>
                    </div>
                    <div class="privacy-select-wrapper">
                        <select class="privacy-select" name="HienThiNgaySinh">
                            <option value="Public" selected="@(Model.HienThiNgaySinh == "Public")">Công khai</option>
                            <option value="Private" selected="@(Model.HienThiNgaySinh == "Private")">Riêng tư</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Footer Buttons -->
            <div class="modal-footer">
                <button type="submit" class="save-btn">Lưu thay đổi</button>
                <button type="button" class="cancel-btn" onclick="closeEditProfileModal()">Hủy</button>
            </div>
        </form>
    </div>
</div>

<!-- View All Info Modal -->
<div id="viewAllInfoModal" class="modal">
    <div class="modal-content user-info-modal">
        <span class="close" onclick="closeViewAllInfoModal()">&times;</span>
        
        <div class="user-info-center">
            <div class="user-avatar-image">
                <img src="@Model.GetAvatarPath()" alt="@Model.TenNguoiDung">
            </div>
            
            <h2 class="user-name">@Model.TenNguoiDung</h2>
            
            @if (!ViewBag.IsOwnProfile && User.Identity.IsAuthenticated)
            {
                <div class="follow-button-container">
                    <button class="follow-button-primary @(ViewBag.IsFollowing ? "following" : "")"
                            onclick="toggleFollow(event, '@Model.Id')">
                        <span class="follow-text">Theo dõi</span>
                        <span class="following-text">Đang theo dõi</span>
                    </button>
                    
                    <a href="/Messages/Index/@Model.Id" class="message-button-primary">
                        <i class="fas fa-envelope"></i> Nhắn tin
                    </a>
                </div>
            }
            
            <div class="user-profile-divider"></div>
            
            @if (!string.IsNullOrEmpty(Model.DiaChi) && Model.HienThiDiaChi == "Public")
            {
                <div class="user-location">
                    <i class="fas fa-map-marker-alt"></i> @Model.DiaChi
                </div>
            }
            
            <div class="user-social-links">
                @if (Model.Media != null && Model.Media.Any())
                {
                    @foreach (var media in Model.Media)
                    {
                        <a href="@media.DuongDan" target="_blank" class="social-btn">
                            @switch (media.LoaiMedia)
                            {
                                case "X":
                                    <i class="fab fa-x"></i>
                                    break;
                                case "Instagram":
                                    <i class="fab fa-instagram"></i>
                                    break;
                                case "Facebook":
                                    <i class="fab fa-facebook"></i>
                                    break;
                                case "Tiktok":
                                    <i class="fab fa-tiktok"></i>
                                    break;
                                case "Website":
                                    <i class="fas fa-link"></i>
                                    break;
                            }
                        </a>
                    }
                }
            </div>
            
            @if (!string.IsNullOrEmpty(Model.MoTa))
            {
                <div class="user-description">
                    <p>@Model.MoTa</p>
                </div>
            }
            
            <div class="user-profile-divider"></div>
            
            <div class="user-info-details">
                @if (Model.NgaySinh.HasValue && Model.HienThiNgaySinh == "Public")
                {
                    <div class="info-row no-border">
                        <div class="info-label">Sinh nhật</div>
                        <div class="info-value">@(Model.NgaySinh.HasValue ? Model.NgaySinh.Value.ToString("MMMM d") : "")</div>
                    </div>
                }
                
                @if (!string.IsNullOrEmpty(Model.GioiTinh) && Model.HienThiGioiTinh == "Public")
                {
                    <div class="info-row no-border">
                        <div class="info-label">Giới tính</div>
                        <div class="info-value">@Model.GioiTinh</div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Thêm Modal chọn tác phẩm nổi bật -->
<div id="addFeaturedModal" class="modal">
    <div class="modal-content featured-modal">
        <div class="modal-header">
            <h3>Thêm tác phẩm nổi bật</h3>
            <span class="close" onclick="closeAddFeaturedModal()">&times;</span>
        </div>
        <div class="modal-body">
            <div class="artwork-select-container">
                <div class="artwork-search">
                    <input type="text" id="artworkSearch" placeholder="Tìm kiếm tác phẩm..." class="form-control">
                </div>
                <div class="artwork-grid" id="artwork-selection-grid">
                    <!-- Danh sách tác phẩm sẽ được thêm vào đây bằng JavaScript -->
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <p class="hint-text">Nhấn vào tác phẩm để thêm vào danh mục nổi bật</p>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/profile.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Đảm bảo navbar hoạt động đúng
            const navbar = document.querySelector('.navbar.fixed-top');
            if (navbar) {
                navbar.style.zIndex = 10000;
            }
            
            // Thêm padding-top cho body
            document.body.style.paddingTop = '56px';
            
            // Xử lý xung đột đường dẫn mặc định
            document.querySelectorAll('.navbar a[href="#"]').forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                });
            });

            const seeAllMediaBtn = document.querySelector('.see-all-media');
            if (seeAllMediaBtn) {
                seeAllMediaBtn.onclick = function(e) {
                    e.preventDefault();
                    openViewAllInfoModal();
                };
            }
        });

        // Đơn giản hóa hàm mở modal tác phẩm nổi bật
        function showFeaturedArtworksModal() {
            const modal = document.getElementById('addFeaturedModal');
            if (modal) {
                modal.style.display = 'block';
                document.body.classList.add('modal-open');
                loadUserArtworks();
            }
        }

        // Hàm đóng modal tác phẩm nổi bật
        function closeAddFeaturedModal() {
            const modal = document.getElementById('addFeaturedModal');
            if (modal) {
                modal.style.display = 'none';
                document.body.classList.remove('modal-open');
            }
        }

        // Hàm tải sản phẩm của người dùng
        function loadUserArtworks() {
            const userId = document.querySelector('meta[name="user-id"]')?.content;
            
            if (!userId) {
                console.error('Không tìm thấy ID người dùng');
                return;
            }
            
            // Hiển thị loading trong modal
            const container = document.getElementById('artwork-selection-grid');
            if (container) {
                container.innerHTML = '<div class="loading">Đang tải tác phẩm...</div>';
            }
            
            // Gọi API để lấy danh sách tác phẩm
            fetch('/User/GetUserArtworks?userId=' + userId)
                .then(response => response.json())
                .then(data => {
                    displayArtworksForSelection(data);
                })
                .catch(error => {
                    console.error('Lỗi khi tải danh sách tác phẩm:', error);
                    if (container) {
                        container.innerHTML = '<div class="error">Có lỗi xảy ra khi tải tác phẩm. Vui lòng thử lại sau.</div>';
                    }
                });
        }

        // Hiển thị danh sách tác phẩm để chọn
        function displayArtworksForSelection(artworks) {
            const container = document.getElementById('artwork-selection-grid');
            
            if (!container) return;
            
            container.innerHTML = '';
            
            if (!artworks || artworks.length === 0) {
                container.innerHTML = '<div class="no-artworks">Bạn chưa có tác phẩm nào</div>';
                return;
            }
            
            artworks.forEach(artwork => {
                const isFeatured = artwork.isFeatured;
                
                const artworkElement = document.createElement('div');
                artworkElement.className = `artwork-select-item ${isFeatured ? 'is-featured' : ''}`;
                artworkElement.dataset.id = artwork.maTranh;
                
                artworkElement.innerHTML = `
                    <div class="artwork-image-container">
                        <img src="${artwork.duongDanAnh}" alt="${artwork.tieuDe}">
                        <div class="artwork-select-overlay">
                            <div class="overlay-indicator">
                                ${isFeatured ? '<i class="fas fa-check-circle"></i> Đã thêm' : '<i class="fas fa-plus-circle"></i> Thêm'}
                            </div>
                        </div>
                    </div>
                    <div class="artwork-title">${artwork.tieuDe}</div>
                `;
                
                artworkElement.addEventListener('click', function() {
                    toggleFeaturedArtwork(artwork.maTranh, this);
                });
                
                container.appendChild(artworkElement);
            });
            
            // Thêm tính năng tìm kiếm
            const searchInput = document.getElementById('artworkSearch');
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    document.querySelectorAll('.artwork-select-item').forEach(item => {
                        const title = item.querySelector('.artwork-title').textContent.toLowerCase();
                        item.style.display = title.includes(searchTerm) ? 'block' : 'none';
                    });
                });
            }
        }

        // Toggle featured artwork
        function toggleFeaturedArtwork(artworkId, element) {
            const isCurrentlyFeatured = element.classList.contains('is-featured');
            const shouldBeFeatured = !isCurrentlyFeatured;
            
            fetch('/User/ToggleFeaturedArtwork', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ 
                    artworkId: artworkId, 
                    isFeatured: shouldBeFeatured 
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    if (shouldBeFeatured) {
                        element.classList.add('is-featured');
                        element.querySelector('.overlay-indicator').innerHTML = '<i class="fas fa-check-circle"></i> Đã thêm';
                        
                        // Reload trang để hiển thị sản phẩm mới thêm
                        window.location.reload();
                    } else {
                        element.classList.remove('is-featured');
                        element.querySelector('.overlay-indicator').innerHTML = '<i class="fas fa-plus-circle"></i> Thêm';
                        
                        // Reload trang để cập nhật
                        window.location.reload();
                    }
                } else {
                    alert(data.message || 'Có lỗi khi cập nhật tác phẩm nổi bật');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi cập nhật tác phẩm nổi bật');
            });
        }

        // Xóa tác phẩm khỏi nổi bật
        function removeFeatured(artworkId) {
            event.preventDefault();
            event.stopPropagation();
            
            if(confirm('Bạn có chắc muốn xóa tác phẩm này khỏi mục nổi bật?')) {
                fetch('/User/ToggleFeaturedArtwork', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ 
                        artworkId: artworkId, 
                        isFeatured: false
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        alert(data.message || 'Có lỗi khi xóa tác phẩm nổi bật');
                    }
                });
            }
        }

        // Gán sự kiện đóng modal
        document.addEventListener('DOMContentLoaded', function() {
            const closeButtons = document.querySelectorAll('#addFeaturedModal .close');
            closeButtons.forEach(button => {
                button.onclick = closeAddFeaturedModal;
            });
        });
    </script>
}  