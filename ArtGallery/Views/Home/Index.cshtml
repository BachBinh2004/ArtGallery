@model ArtGallery.ViewModels.HomeIndexViewModel

@using Microsoft.Extensions.DependencyInjection
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims
@inject ArtGalleryContext DbContext
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<!-- CSS-->
<link rel="stylesheet" href="~/css/style.css?v=2">
<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">


@{  
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<input type="hidden" name="__RequestVerificationToken" value="@token" />

<div class="container mt-3">
    <!-- Swiper -->
    <div class="swiper mySwiper">
        <div class="swiper-wrapper">
            <!-- Chứa các slide bên trong, giúp SwiperJS nhận diện và xử lý hiệu ứng trượt. -->
            <!-- Slide 1 -->
            <div class="swiper-slide">
                <!-- Xác định một slide trong swiper-wrapper, giúp SwiperJS hiểu và xử lý hiệu ứng trượt. -->
                <div class="work-card">
                    <div class="card-img-wrapper">
                        <img src="~/images/introduce/amano2.jpg" alt="Art1">
                    </div>
                </div>
            </div>
            <!-- Slide 2 -->
            <div class="swiper-slide">
                <div class="work-card">
                    <div class="card-img-wrapper">
                        <img src="~/images/introduce/Ambassador.jpg" alt="Art2">
                    </div>
                </div>
            </div>
            <!-- Slide 3 -->
            <div class="swiper-slide">
                <div class="work-card">
                    <div class="card-img-wrapper">
                        <img src="~/images/introduce/diamond-city.jpg" alt="Art3">
                    </div>
                </div>
            </div>
            <!-- Slide 4 -->
            <div class="swiper-slide">
                <div class="work-card">
                    <div class="card-img-wrapper">
                        <img src="~/images/introduce/eboywp1.jpg" alt="Art4">
                    </div>
                </div>
            </div>
            <!-- Slide 5 -->
            <div class="swiper-slide">
                <div class="work-card">
                    <div class="card-img-wrapper">
                        <img src="~/images/introduce/green_source.jpg" alt="Art5">
                    </div>
                </div>
            </div>
            <!-- Slide 6 -->
            <div class="swiper-slide">
                <div class="work-card">
                    <div class="card-img-wrapper">
                        <img src="~/images/introduce/pxfuel.jpg" alt="Art6">
                    </div>
                </div>
            </div>
        </div>
        <!-- Nút điều hướng -->
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
    </div>

    <div class="container-fluid p-0">
        <div class="tag-container">
            <div class="tag">
                <a href="@Url.Action("Index", "Home")" class="tag-items home @(Model.ActiveCategory == "Home" ? "active" : "")">Home</a>
                <a href="@Url.Action("Category", "Home", new { name = "Illustrations" })" class="tag-items illustration @(Model.ActiveCategory == "Illustrations" ? "active" : "")">Illustrations</a>
                <a href="@Url.Action("Category", "Home", new { name = "Concept" })" class="tag-items concept @(Model.ActiveCategory == "Concept" ? "active" : "")">Concept</a>
                <a href="@Url.Action("Category", "Home", new { name = "Anime/Manga" })" class="tag-items anime @(Model.ActiveCategory == "Anime/Manga" ? "active" : "")">Anime/Manga</a>
                <a href="@Url.Action("Category", "Home", new { name = "Pixel" })" class="tag-items pixel @(Model.ActiveCategory == "Pixel" ? "active" : "")">Pixel</a>
                <a href="@Url.Action("Category", "Home", new { name = "Vector" })" class="tag-items vector @(Model.ActiveCategory == "Vector" ? "active" : "")">Vector</a>
                <a href="@Url.Action("Category", "Home", new { name = "Low-Poly" })" class="tag-items lowpoly @(Model.ActiveCategory == "Low-Poly" ? "active" : "")">Low-Poly</a>
            </div>
        </div>
    </div>
    <!-- Recommended pics -->
    <div class="recommended-pics">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3 class="section-title">Tác phẩm của những người bạn theo dõi</h3>
        </div>

        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
            @foreach (var item in Model.FollowingArtworks)
            {
                <div>
                    <div class="pic-item">
                        <div class="image-wrapper">
                            <a asp-controller="Artwork" asp-action="Display" asp-route-id="@item.MaTranh" class="art-link">
                                <img src="@item.DuongDanAnh" alt="@item.TieuDe">
                            </a>
                            @{
                                var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                                var isLiked = await DbContext.LuotThiches
                                    .AnyAsync(lt => lt.MaTranh == item.MaTranh && lt.MaNguoiDung == currentUserId);
                            }
                            <button class="like-button @(isLiked ? "active" : "")" 
                                    onclick="toggleLike(this, @item.MaTranh)">
                                <i class="@(isLiked ? "fas" : "far") fa-heart"></i>
                            </button>
                        </div>

                        <div class="img-info mt-2">
                            <a asp-controller="Artwork" asp-action="Display" asp-route-id="@item.MaTranh" class="art-link">
                                <h6 class="artwork-title">@item.TieuDe</h6>
                            </a>
                            <div class="artist-info d-flex align-items-center">
                                <div class="artist-avatar">
                                    <img src="@item.MaNguoiDungNavigation.GetAvatarPath()" alt="@item.MaNguoiDungNavigation.TenNguoiDung">
                                </div>
                                <span class="artist-name">@item.MaNguoiDungNavigation.TenNguoiDung</span>
                            </div>
                        </div>
                    </div>
                </div>  
            }
        </div>
    </div>
</div>

<!-- Thêm phần Được đề xuất - 12 sản phẩm được yêu thích nhất -->
<div class="container mt-5">
    <div class="recommended-pics">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3 class="section-title">Được đề xuất</h3>
        </div>

        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
            @foreach (var item in Model.MostLikedArtworks)
            {
                <div>
                    <div class="pic-item">
                        <div class="image-wrapper">
                            <a asp-controller="Artwork" asp-action="Display" asp-route-id="@item.MaTranh" class="art-link">
                                <img src="@item.DuongDanAnh" alt="@item.TieuDe">
                            </a>
                            @{
                                var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                                var isLiked = await DbContext.LuotThiches
                                    .AnyAsync(lt => lt.MaTranh == item.MaTranh && lt.MaNguoiDung == currentUserId);
                                var likeCount = item.LuotThiches.Count;
                            }
                            <button class="like-button @(isLiked ? "active" : "")" 
                                    onclick="toggleLike(this, @item.MaTranh)">
                                <i class="@(isLiked ? "fas" : "far") fa-heart"></i>
                            </button>
                            
                            <!-- Hiển thị số lượt thích -->
                            <div class="like-count">
                                @likeCount <i class="fas fa-heart"></i>
                            </div>
                        </div>

                        <div class="img-info mt-2">
                            <a asp-controller="Artwork" asp-action="Display" asp-route-id="@item.MaTranh" class="art-link">
                                <h6 class="artwork-title">@item.TieuDe</h6>
                            </a>
                            <div class="artist-info d-flex align-items-center">
                                <div class="artist-avatar">
                                    <img src="@item.MaNguoiDungNavigation.GetAvatarPath()" alt="@item.MaNguoiDungNavigation.TenNguoiDung">
                                </div>
                                <span class="artist-name">@item.MaNguoiDungNavigation.TenNguoiDung</span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script src="~/js/index.js"></script>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function toggleLike(button, artworkId) {
            $.ajax({
                url: '/Artwork/ToggleLike',
                type: 'POST',
                data: { artworkId: artworkId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        const icon = button.querySelector('i');
                        if (response.liked) {
                            // Đã thích
                            icon.classList.remove('far');
                            icon.classList.add('fas');
                            button.classList.add('active');
                        } else {
                            // Đã hủy thích
                            icon.classList.remove('fas');
                            icon.classList.add('far');
                            button.classList.remove('active');
                        }
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert('Có lỗi xảy ra khi thực hiện thao tác');
                }
            });
        }

        // Thêm đoạn debug để kiểm tra
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded');
            const tagContainer = document.querySelector('.tag-container');
            if (tagContainer) {
                console.log('Tag container exists');
                console.log('Visibility:', window.getComputedStyle(tagContainer).display);
            } else {
                console.log('Tag container not found');
            }
        });
    </script>
}